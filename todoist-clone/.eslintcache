[{"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/App/index.js":"1","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/Modal/index.js":"2","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/pages/Main/index.js":"3","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/persistance/localStorage.js":"4","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/Modal/Modal.jsx":"5","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/pages/Main/Main.jsx":"6","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/TodoList/index.js":"7","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/TodoItem/TodoItem.jsx":"8","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/redux/reducers/domElementsReducer.js":"9","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/redux/reducers/authReducer.js":"10","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/pages/Upcoming/Upcoming.jsx":"11","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/redux/actions/actions.js":"12","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/TodoList/TodoList.jsx":"13","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/persistance/network.js":"14","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/pages/All/All.jsx":"15","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/App/App.jsx":"16","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/Login/index.js":"17","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/pages/Upcoming/index.js":"18","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/Nav/Nav.jsx":"19"},{"size":45,"mtime":1610020862412,"results":"20","hashOfConfig":"21"},{"size":51,"mtime":1610992445103,"results":"22","hashOfConfig":"21"},{"size":48,"mtime":1610992445115,"results":"23","hashOfConfig":"21"},{"size":401,"mtime":1612085438468,"results":"24","hashOfConfig":"21"},{"size":2096,"mtime":1612191477598,"results":"25","hashOfConfig":"21"},{"size":3467,"mtime":1612219776401,"results":"26","hashOfConfig":"21"},{"size":60,"mtime":1610992445109,"results":"27","hashOfConfig":"21"},{"size":1645,"mtime":1612182505948,"results":"28","hashOfConfig":"21"},{"size":1495,"mtime":1612192500771,"results":"29","hashOfConfig":"21"},{"size":282,"mtime":1611867399148,"results":"30","hashOfConfig":"21"},{"size":367,"mtime":1611869071197,"results":"31","hashOfConfig":"21"},{"size":1114,"mtime":1612085438469,"results":"32","hashOfConfig":"21"},{"size":777,"mtime":1612189745685,"results":"33","hashOfConfig":"21"},{"size":1946,"mtime":1611867399147,"results":"34","hashOfConfig":"21"},{"size":260,"mtime":1612171409251,"results":"35","hashOfConfig":"21"},{"size":3372,"mtime":1612219227214,"results":"36","hashOfConfig":"21"},{"size":51,"mtime":1611696359993,"results":"37","hashOfConfig":"21"},{"size":59,"mtime":1610992445119,"results":"38","hashOfConfig":"21"},{"size":1235,"mtime":1612218175065,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1nkcdrp",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/App/index.js",[],["80","81"],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/Modal/index.js",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/pages/Main/index.js",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/persistance/localStorage.js",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/Modal/Modal.jsx",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/pages/Main/Main.jsx",["82"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { createTodo } from '../../redux/actions/actions';\n\nimport useSound from 'use-sound';\nimport successSound from '../../assets/sounds/success_sound.mp3';\n\nimport './Main.scss';\n\nfunction Main(props) {\n  const { createTodo, getToday } = props;\n\n  const [city, setCity] = useState('Minsk');\n  const [error, setError] = useState('');\n  const [wData, setWData] = useState({\n    temp: '',\n    icon: '',\n    desc: '',\n  });\n\n  const [randomTodo, setRandomTodo] = useState({\n    title: '',\n    participants: '',\n    price: '',\n    type: '',\n    link: '',\n  });\n\n  const [playSuccess] = useSound(successSound, {\n    volume: 0.25,\n  });\n\n  const { REACT_APP_WEATHER_API_KEY } = process.env;\n  const weatherAPI = `https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=en&appid=${REACT_APP_WEATHER_API_KEY}&units=metric`;\n  const randomTodoAPI = 'https://www.boredapi.com/api/activity';\n\n  const cityHandler = (e) => {\n    setCity(e.target.value);\n  };\n\n  useEffect(() => {\n    const getWeather = async () => {\n      try {\n        const res = await axios.get(weatherAPI);\n        setWData((state) => ({\n          ...state,\n          temp: Math.round(res.data.main.temp),\n          icon: `owf owf-${res.data.weather[0].id} owf-5x`,\n          desc: res.data.weather[0].description,\n        }));\n        setError('');\n      } catch (e) {\n        setError('Enter correct city');\n      }\n    };\n    getWeather();\n  }, [weatherAPI]);\n\n  const getRandomTodo = async () => {\n    try {\n      const result = await axios.get(randomTodoAPI);\n      setRandomTodo({\n        title: result.data.activity,\n        participants: result.data.participants,\n        price: result.data.price,\n        type: result.data.type,\n        link: result.data.link,\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  const submitRandomTodo = () => {\n    if (randomTodo.title !== '') {\n      const newTodo = {\n        id: new Date().getTime(),\n        title: randomTodo.title,\n        date: getToday(),\n        completed: false,\n      };\n      createTodo(newTodo);\n      getRandomTodo();\n      playSuccess();\n    }\n  };\n\n  return (\n    <div className='Main'>\n      <div className='weather-block'>\n        <div className='input-block'>\n          <input\n            id='city'\n            className='city'\n            value={city}\n            onChange={cityHandler}\n          ></input>\n        </div>\n        <div className='data-block'>\n          <h2 id='temp'>{wData.temp} Â°C</h2>\n          <i className={wData.icon}></i>\n        </div>\n      </div>\n\n      <div className='random-activity-generator'>\n        <h2>Random activity genarator</h2>\n        <div className='random-todo'>\n          <button\n            className='refresh-random-todo'\n            onClick={() => getRandomTodo()}\n          >\n            Give me an new activity\n          </button>\n          <h3>{randomTodo.title}</h3>\n          <div className='random-todo-data'>\n            <p>Participants: {randomTodo.participants}</p>\n            <p>Price: {randomTodo.price} $</p>\n            <p>Type: {randomTodo.type}</p>\n            <button onClick={submitRandomTodo}>\n              Add to my Todoist\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = {\n  createTodo,\n};\n\nexport default connect(null, mapDispatchToProps)(Main);\n","/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/TodoList/index.js",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/TodoItem/TodoItem.jsx",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/redux/reducers/domElementsReducer.js",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/redux/reducers/authReducer.js",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/pages/Upcoming/Upcoming.jsx",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/redux/actions/actions.js",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/TodoList/TodoList.jsx",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/persistance/network.js",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/pages/All/All.jsx",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/App/App.jsx",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/Login/index.js",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/pages/Upcoming/index.js",[],"/Users/alex_hoadley/Desktop/GitHub/Todoist-Clone/todoist-clone/src/components/Nav/Nav.jsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":15,"column":10,"nodeType":"89","messageId":"90","endLine":15,"endColumn":15},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]